from db import Transactionsfrom utils import generate_unique_idclass UserGroup(Transactions):	def __init__(self, unique_id: str = None, user_id: str = None, group_id: str = None):		super().__init__()		self.id = unique_id or generate_unique_id()		self.user_id = user_id		self.group_id = group_id		def my_group(self, user_id):		sql: str = 'select * from group_user where user_id=?'		params = (user_id,)		return self.execute(sql, params, fetchall=True)		def create_group_user(self):		sql: str = 'insert into group_user(id, user_id, group_id) values (?,?,?)'		params = (self.id, self.user_id, self.group_id)		return self.execute(sql, params, commit=True)		def my_all_group(self):		sql: str = 'select group_id from group_user where user_id=?'		params = (self.user_id,)		my_group = self.execute(sql, params, fetchall=True)		_: list = []		for group in my_group:			_.append(group[0])		return _