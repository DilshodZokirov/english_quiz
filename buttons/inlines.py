from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButtonfrom db import Userfrom db.model_group import Groupfrom db.model_user_group import UserGroupUZ_TEXT = 'üá∫üáø O\'zbek'EN_TEXT = 'üá¨üáß English'RU_TEXT = 'üá∑üá∫ –†—É—Å—Å–∫–∏–π'def language_button():	keyboard = InlineKeyboardMarkup()	keyboard.add(InlineKeyboardButton(text=UZ_TEXT, callback_data='uz'))	keyboard.add(InlineKeyboardButton(text=EN_TEXT, callback_data='en'))	keyboard.add(InlineKeyboardButton(text=RU_TEXT, callback_data='ru'))	return keyboarddef new_group_student(user_id: str):	keyboard = InlineKeyboardMarkup()	groups = Group().select_group()	my_group = UserGroup(user_id=user_id).my_all_group()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	_: list = []	for group in groups:		if group.call_data not in my_group:			_.append(my_group)			keyboard.add(InlineKeyboardButton(text=group.name, callback_data=group.call_data))	keyboard.add(back)	return None if len(_) == 0 else keyboard# # def directions_button():# #     keyboard = InlineKeyboardMarkup()# #     directions =# #     for direction in directions:# #         keyboard.add(InlineKeyboardButton(text=direction.name, callback_data=direction.id))# #     return keyboard# def customer_list():# 	keyboard = InlineKeyboardMarkup()# 	customers = User().customer_list()# 	for customer in customers:# 		keyboard.add(# 			InlineKeyboardButton(# 				text=f'Ismi: {customer.name}\nTel: {customer.phone}\nId :{str(customer.unique_id)}',# 				callback_data=str(customer.user_id)))# 	return None if len(customers) == 0 else keyboard#def choice():	keyboard = InlineKeyboardMarkup()	yes = InlineKeyboardButton(text='Davom etamiz', callback_data='yes')	no = InlineKeyboardButton(text='Bosh menuga qaytamiz', callback_data='no')	keyboard.add(yes, no)	return keyboarddef decode_customer():	keyboard = InlineKeyboardMarkup()	customers = User().customer_list()	_: list = []	for customer in customers:		if customer.unique_id is None:			_.append(customer.unique_id)			keyboard.add(InlineKeyboardButton(text=f'Ismi: {customer.name}\nTel: {customer.phone}',			                                  callback_data=customer.phone))	return None if len(_) == 0 else keyboarddef excel_list():	keyboard = InlineKeyboardMarkup()	documents = Excel().all_excel()	for document in documents:		keyboard.add(InlineKeyboardButton(text=f'Nomi: {document.path}', callback_data=document.call_data))	return None if len(documents) == 0 else keyboarddef archive_list():	keyboard = InlineKeyboardMarkup()	documents = Excel().delete_archive_file()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	for document in documents:		keyboard.add(InlineKeyboardButton(text=f'Nomi: {document.file_name}', callback_data=document.call_data))	keyboard.add(back)	return None if len(documents) == 0 else keyboarddef archive_add_list():	keyboard = InlineKeyboardMarkup()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	documents = Excel().add_archive_file()	for document in documents:		keyboard.add(InlineKeyboardButton(text=f'Nomi: {document.file_name}', callback_data=document.call_data))	keyboard.add(back)	return None if len(documents) == 0 else keyboarddef search_file_list():	keyboard = InlineKeyboardMarkup()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	documents = Excel().search_excel_file()	for document in documents:		keyboard.add(InlineKeyboardButton(text=f'Nomi: {document.file_name}', callback_data=document.call_data))	keyboard.add(back)	return None if len(documents) == 0 else keyboarddef create_admin():	keyboard = InlineKeyboardMarkup()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	users = User().create_admin()	for user in users:		keyboard.add(InlineKeyboardButton(text=f'Ismi:{user.name}\nPhone:{user.phone}', callback_data=user.call_data))	keyboard.add(back)	return None if len(users) == 0 else keyboarddef delete_admin(chat_id):	keyboard = InlineKeyboardMarkup()	back = InlineKeyboardButton(text='Orqaga', callback_data='back')	users = User().delete_admin()	my = User().my_chat_id(chat_id)	_: list = []	for user in users:		if my[0] not in user.call_data:			_.append(user.name)			keyboard.add(				InlineKeyboardButton(text=f'Ismi:{user.name}\nPhone:{user.phone}', callback_data=user.call_data))	keyboard.add(back)	return None if len(_) == 0 else keyboard