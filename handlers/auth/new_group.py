from aiogram import typesfrom aiogram.dispatcher import FSMContextfrom buttons.inlines import new_group_studentfrom buttons.markup import NEW_GROUP, my_board_buttonfrom db import Userfrom db.model_user_group import UserGroupfrom dispatch import dpfrom states import BeginState, NewGroup@dp.message_handler(lambda message: str(message.text).__eq__(NEW_GROUP), state=BeginState.begin)async def new_group_students(message: types.Message, state: FSMContext):	user = User(chat_id=message.chat.id).registered_user_chat_id()	async with state.proxy() as data:		data['user_id'] = user[0]	keyboard = new_group_student(data['user_id'])	if keyboard:		text = 'Iltimos birortasini tanlang'		await NewGroup.begin.set()		await message.bot.send_message(text=text, chat_id=message.chat.id,		                               reply_markup=new_group_student(data['user_id']))		return	text = 'Sizda tanlaydigan guruh yo\'q'	await BeginState.begin.set()	await message.bot.send_message(text=text, chat_id=message.chat.id,	                               reply_markup=my_board_button(chat_id=message.chat.id))@dp.callback_query_handler(state=NewGroup.begin)async def submit_new_group(query: types.CallbackQuery, state: FSMContext):	await query.message.delete()	if not query.data.__eq__('back'):		async with state.proxy() as data:			data['group_id'] = query.data		UserGroup(user_id=data['user_id'], group_id=data['group_id']).create_group_user()		text = 'Muaffaqiyatli yakunlandi'		await BeginState.begin.set()		await query.message.bot.send_message(text=text, chat_id=query.message.chat.id,		                                     reply_markup=my_board_button(chat_id=query.message.chat.id))		return	text = 'Orqaga qaytishingiz mumkin!!! '	# await query.message.delete()	await BeginState.begin.set()	await query.message.bot.send_message(text=text, chat_id=query.message.chat.id,	                                     reply_markup=my_board_button(chat_id=query.message.chat.id))